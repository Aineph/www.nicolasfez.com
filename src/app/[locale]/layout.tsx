import type { Metadata } from 'next'
import { Geist, Geist_Mono } from 'next/font/google'
import '../globals.css'
import { gsap } from 'gsap'
import { useGSAP } from '@gsap/react'
import { TextPlugin } from 'gsap/TextPlugin'
import { NextIntlClientProvider } from 'next-intl'
import Navbar from '@/components/ui/navbar/Navbar'
import React from 'react'
import { Locale } from '@/types/config'
import { routing } from '@/i18n/routing'
import { notFound } from 'next/navigation'
import { getMessages } from 'next-intl/server'

const geistSans = Geist({
  variable: '--font-geist-sans',
  subsets: ['latin'],
})

const geistMono = Geist_Mono({
  variable: '--font-geist-mono',
  subsets: ['latin'],
})

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
}

gsap.registerPlugin(useGSAP, TextPlugin)

export interface RootLayoutProps {
  children: React.ReactNode,
  params: Promise<{
    locale: Locale,
  }>
}

const RootLayout: React.FunctionComponent<RootLayoutProps> = async ({
  children,
  params,
}) => {
  const { locale } = await params

  if (!routing.locales.includes(locale)) {
    notFound()
  }

  const messages = await getMessages()

  return (
    <html lang={locale}>
    <body
      className={`${geistSans.variable} ${geistMono.variable} antialiased`}
    >
    <NextIntlClientProvider messages={messages}>
      <header>
        <Navbar/>
      </header>
      {children}
    </NextIntlClientProvider>
    </body>
    </html>
  )
}

export default RootLayout
